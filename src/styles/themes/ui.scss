@import 'src/styles/variables.scss';

// Buttons
button {
  background-color: $primary-color;
  color: #fff;
  border: none;
  border-radius: $button-radius;
  padding: 10px 20px;
  font-size: 16px;
  cursor: pointer;
  transition: background-color $transition;
  align-items: center;
  display: flex;

  svg {
    margin-right: 5px;
    font-size: 1.2rem;
  }

  &:hover {
    background-color: $secondary-color;
  }
}

button:disabled {
  background-color: $btn-background-disabled-color;
  cursor: not-allowed;
}

.btn-danger {
  background-color: $cancelColor;

  &:hover {
    background-color: $cancelColorHover;
  }
}

// Action Buttons
.action-buttons {
  display: flex;
  height: 100%;
  align-items: flex-end;
  gap: $spacing-small;
  margin: 0;

  button:disabled {
    background-color: $btn-background-disabled-color;
    cursor: not-allowed;
  }

  button {
    padding: $spacing-small;
    border: none;
    border-radius: $button-radius;
    cursor: pointer;
    transition: background-color 0.3s;
    height: 40px; // Consistent height
    min-width: 120px; // Consistent width
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .cancel-button {
    background-color: $cancelColor;

    &:hover {
      background-color: $cancelColorHover;
    }
  }
}




// Chip styles
.chip {
  border-radius: $button-radius;
  font-weight: bold;
  padding: 5px 10px;

  &.green {
    background-color: rgba(76, 175, 80, 0.2);
    color: #4caf50;
  }

  &.red {
    background-color: rgba(244, 67, 54, 0.2);
    color: #f44336;
  }

  &.yellow {
    background-color: rgba(255, 235, 59, 0.2);
    color: #ffeb3b;
  }

  &.number {
    color: #007bff;
    font-weight: bold;
  }
}


// No Data Message
.no-data-message {
  padding: 10px;
  border-radius: 5px;
  text-align: center;
  font-size: 14px;
  color: #555;
  width: 100%;
  background-color: #f4f4f4;
}

// No Data Message with Icon
.no-data-message::before {
  content: "!";
  display: block;
  font-size: 24px;
  color: #ff0000;
  margin-bottom: 5px;
}

// Inputs
textarea,
input, select {
  width: 100%;
  padding: 10px;
  border: $border;
  border-radius: $button-radius;
  font-size: 1rem;
  transition: border-color 0.3s;
  resize: none;
  background-color: $input-background-color;

  &:focus {
    outline: none;
    border-color: $primary-color; // Highlight color on focus
  }
}

textarea {
  height: 100px;
}

.switch-wrapper {
  background-color: red;
  padding: 13rem;
}

input[type="checkbox"] {
  position: relative;
  appearance: none; /* Remove default checkbox appearance */
  width: 40px; /* Adjust the width of the switch */
  height: 20px; /* Adjust the height of the switch */
  background-color: $input-background-color; /* Background color when unchecked */
  border-radius: $border-radius; /* Make it round */
  cursor: pointer; /* Change cursor to pointer */
  border: $border;

  &:checked {
    background-color: $primary-color; /* Background color when checked */
  }

  &::before {
    content: "";
    position: absolute;
    top: 1px; /* Adjust the vertical position */
    left: 2px; /* Adjust the horizontal position */
    width: 16px; /* Width of the switch handle */
    height: 16px; /* Height of the switch handle */
    background-color: #fff; /* Color of the switch handle */
    border-radius: 50%; /* Make it round */
    transition: transform $transition; /* Add a smooth transition effect */
  }

  &:checked::before {
    transform: translateX(20px); /* Move the switch handle to the right when checked */
  }
}
